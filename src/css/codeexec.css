@charset "UTF-8";
@import './reset.css';
@import './style.css';
.wrap {
  display: flex;
  flex-direction: column;
}
.wrap main {
  flex-grow: 1;
  padding: 2rem;
} 

.wrap footer {
  width:100%;
  position:fixed;
  bottom:0;
}

header {
  padding: 0 2rem;
}

.py-terminal   {
  margin: 0 2rem 6.4rem;
}


.py-error {
  background: none;
  color: var(--ColorNegative);
  border: none;
}

.py-repl-run-button {
  cursor: pointer;
  opacity: 0.5;
  transition: all 0.3s;
}
.py-repl-run-button svg {
  transform: scale(0.8);
}
.py-repl-run-button path {
  fill: var(--ColorWhite);
}

.info {
  margin-bottom: 2rem;
}

.cm-editor {
  border: 1px solid rgba(255, 255, 255, 0.1);
}
.cm-editor.cm-focused {
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.py-repl-editor {
  border: none;
}
.py-repl-editor .cm-gutters {
  background: rgba(255, 255, 255, 0.1);
  color: var(--ColorWhite);
  border-right: 1px solid rgba(255, 255, 255, 0.1);
}
.py-repl-editor .cm-activeLineGutter {
  background: rgba(255, 255, 255, 0.4);
  color: var(--ColorDark);
}
.py-repl-editor .cm-activeLine {
  background: rgba(255, 255, 255, 0.2);
}

.py-repl-output {
  padding: 2rem;
  margin: 1rem 0 4rem 0;
  background: rgba(0, 0, 0, 0.2);
}

.ͼb {
  color: var(--codeBuiltinfunction);
}

.ͼd {
  color: var(--codeText);
}

.ͼe {
  color: var(--codeText);
}

.ͼg {
  color: var(--codeText);
}